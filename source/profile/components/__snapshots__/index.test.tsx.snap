// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components Profile should render self and subcomponents 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ProfileBase
    RemoveKey={[MockFunction]}
    login={
      Object {
        "isLoggedIn": false,
      }
    }
    storage={
      Object {
        "key": "",
        "value": Object {
          "accessToken": "1",
          "autologin": false,
          "name": "test",
          "picture": "",
          "type": "Google",
        },
      }
    }
    utility={
      Object {
        "busyReason": null,
        "hasError": false,
        "isBusy": false,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <ScrollView
        testID="scrollView"
      >
        <View
          style={
            Array [
              Object {
                "flex": 1,
              },
              Object {
                "padding": 10,
              },
            ]
          }
        >
          <View>
            <View
              style={
                Array [
                  Object {
                    "alignItems": "flex-start",
                    "flexDirection": "row",
                    "justifyContent": "center",
                  },
                  Object {
                    "padding": 10,
                  },
                ]
              }
            >
              <Avatar
                activeOpacity={0.7}
                editButton={
                  Object {
                    "iconColor": "#fff",
                    "iconName": "mode-edit",
                    "iconType": "material",
                    "size": null,
                    "style": null,
                    "underlayColor": "#000",
                  }
                }
                large={true}
                onEditPress={null}
                rounded={true}
                showEditButton={false}
                source={
                  Object {
                    "uri": "",
                  }
                }
              />
            </View>
            <FormLabel>
              Namn
            </FormLabel>
            <FormInput
              autoCapitalize="words"
              normalizeFontSize={true}
              onBlur={[Function]}
              onChangeText={[Function]}
              placeholder="Namn"
              value="test"
            />
            <FormLabel>
              Användarnamn
            </FormLabel>
            <FormInput
              autoCapitalize="none"
              normalizeFontSize={true}
              onBlur={[Function]}
              onChangeText={[Function]}
              placeholder="Användarnamn"
              value={null}
            />
            <FormLabel>
              Lösenord
            </FormLabel>
            <FormInput
              autoCapitalize="none"
              normalizeFontSize={true}
              onBlur={[Function]}
              onChangeText={[Function]}
              placeholder="Lösenord"
              secureTextEntry={true}
              value={null}
            />
            <FormLabel>
              E-postadress
            </FormLabel>
            <FormInput
              autoCapitalize="none"
              keyboardType="email-address"
              normalizeFontSize={true}
              onBlur={[Function]}
              onChangeText={[Function]}
              placeholder="E-postadress"
              value={null}
            />
            <FormLabel>
              Autologin
            </FormLabel>
            <Switch
              disabled={false}
              onValueChange={[Function]}
              style={
                Object {
                  "marginBottom": 10,
                  "marginLeft": 15,
                  "marginTop": 5,
                }
              }
              value={false}
            />
          </View>
          <Button
            icon={
              Object {
                "name": "sign-out",
                "type": "font-awesome",
              }
            }
            medium={true}
            onPress={undefined}
            style={
              Object {
                "margin": 10,
              }
            }
            title="Sign out"
          />
        </View>
      </ScrollView>,
      "style": Array [
        Object {
          "flex": 1,
        },
        Object {
          "padding": 10,
        },
      ],
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <View
          style={
            Array [
              Object {
                "flex": 1,
              },
              Object {
                "padding": 10,
              },
            ]
          }
        >
          <View>
            <View
              style={
                Array [
                  Object {
                    "alignItems": "flex-start",
                    "flexDirection": "row",
                    "justifyContent": "center",
                  },
                  Object {
                    "padding": 10,
                  },
                ]
              }
            >
              <Avatar
                activeOpacity={0.7}
                editButton={
                  Object {
                    "iconColor": "#fff",
                    "iconName": "mode-edit",
                    "iconType": "material",
                    "size": null,
                    "style": null,
                    "underlayColor": "#000",
                  }
                }
                large={true}
                onEditPress={null}
                rounded={true}
                showEditButton={false}
                source={
                  Object {
                    "uri": "",
                  }
                }
              />
            </View>
            <FormLabel>
              Namn
            </FormLabel>
            <FormInput
              autoCapitalize="words"
              normalizeFontSize={true}
              onBlur={[Function]}
              onChangeText={[Function]}
              placeholder="Namn"
              value="test"
            />
            <FormLabel>
              Användarnamn
            </FormLabel>
            <FormInput
              autoCapitalize="none"
              normalizeFontSize={true}
              onBlur={[Function]}
              onChangeText={[Function]}
              placeholder="Användarnamn"
              value={null}
            />
            <FormLabel>
              Lösenord
            </FormLabel>
            <FormInput
              autoCapitalize="none"
              normalizeFontSize={true}
              onBlur={[Function]}
              onChangeText={[Function]}
              placeholder="Lösenord"
              secureTextEntry={true}
              value={null}
            />
            <FormLabel>
              E-postadress
            </FormLabel>
            <FormInput
              autoCapitalize="none"
              keyboardType="email-address"
              normalizeFontSize={true}
              onBlur={[Function]}
              onChangeText={[Function]}
              placeholder="E-postadress"
              value={null}
            />
            <FormLabel>
              Autologin
            </FormLabel>
            <Switch
              disabled={false}
              onValueChange={[Function]}
              style={
                Object {
                  "marginBottom": 10,
                  "marginLeft": 15,
                  "marginTop": 5,
                }
              }
              value={false}
            />
          </View>
          <Button
            icon={
              Object {
                "name": "sign-out",
                "type": "font-awesome",
              }
            }
            medium={true}
            onPress={undefined}
            style={
              Object {
                "margin": 10,
              }
            }
            title="Sign out"
          />
        </View>,
        "testID": "scrollView",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <View>
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "flex-start",
                      "flexDirection": "row",
                      "justifyContent": "center",
                    },
                    Object {
                      "padding": 10,
                    },
                  ]
                }
              >
                <Avatar
                  activeOpacity={0.7}
                  editButton={
                    Object {
                      "iconColor": "#fff",
                      "iconName": "mode-edit",
                      "iconType": "material",
                      "size": null,
                      "style": null,
                      "underlayColor": "#000",
                    }
                  }
                  large={true}
                  onEditPress={null}
                  rounded={true}
                  showEditButton={false}
                  source={
                    Object {
                      "uri": "",
                    }
                  }
                />
              </View>
              <FormLabel>
                Namn
              </FormLabel>
              <FormInput
                autoCapitalize="words"
                normalizeFontSize={true}
                onBlur={[Function]}
                onChangeText={[Function]}
                placeholder="Namn"
                value="test"
              />
              <FormLabel>
                Användarnamn
              </FormLabel>
              <FormInput
                autoCapitalize="none"
                normalizeFontSize={true}
                onBlur={[Function]}
                onChangeText={[Function]}
                placeholder="Användarnamn"
                value={null}
              />
              <FormLabel>
                Lösenord
              </FormLabel>
              <FormInput
                autoCapitalize="none"
                normalizeFontSize={true}
                onBlur={[Function]}
                onChangeText={[Function]}
                placeholder="Lösenord"
                secureTextEntry={true}
                value={null}
              />
              <FormLabel>
                E-postadress
              </FormLabel>
              <FormInput
                autoCapitalize="none"
                keyboardType="email-address"
                normalizeFontSize={true}
                onBlur={[Function]}
                onChangeText={[Function]}
                placeholder="E-postadress"
                value={null}
              />
              <FormLabel>
                Autologin
              </FormLabel>
              <Switch
                disabled={false}
                onValueChange={[Function]}
                style={
                  Object {
                    "marginBottom": 10,
                    "marginLeft": 15,
                    "marginTop": 5,
                  }
                }
                value={false}
              />
            </View>,
            <Button
              icon={
                Object {
                  "name": "sign-out",
                  "type": "font-awesome",
                }
              }
              medium={true}
              onPress={undefined}
              style={
                Object {
                  "margin": 10,
                }
              }
              title="Sign out"
            />,
          ],
          "style": Array [
            Object {
              "flex": 1,
            },
            Object {
              "padding": 10,
            },
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <View
                  style={
                    Array [
                      Object {
                        "alignItems": "flex-start",
                        "flexDirection": "row",
                        "justifyContent": "center",
                      },
                      Object {
                        "padding": 10,
                      },
                    ]
                  }
                >
                  <Avatar
                    activeOpacity={0.7}
                    editButton={
                      Object {
                        "iconColor": "#fff",
                        "iconName": "mode-edit",
                        "iconType": "material",
                        "size": null,
                        "style": null,
                        "underlayColor": "#000",
                      }
                    }
                    large={true}
                    onEditPress={null}
                    rounded={true}
                    showEditButton={false}
                    source={
                      Object {
                        "uri": "",
                      }
                    }
                  />
                </View>,
                <FormLabel>
                  Namn
                </FormLabel>,
                <FormInput
                  autoCapitalize="words"
                  normalizeFontSize={true}
                  onBlur={[Function]}
                  onChangeText={[Function]}
                  placeholder="Namn"
                  value="test"
                />,
                <FormLabel>
                  Användarnamn
                </FormLabel>,
                <FormInput
                  autoCapitalize="none"
                  normalizeFontSize={true}
                  onBlur={[Function]}
                  onChangeText={[Function]}
                  placeholder="Användarnamn"
                  value={null}
                />,
                <FormLabel>
                  Lösenord
                </FormLabel>,
                <FormInput
                  autoCapitalize="none"
                  normalizeFontSize={true}
                  onBlur={[Function]}
                  onChangeText={[Function]}
                  placeholder="Lösenord"
                  secureTextEntry={true}
                  value={null}
                />,
                <FormLabel>
                  E-postadress
                </FormLabel>,
                <FormInput
                  autoCapitalize="none"
                  keyboardType="email-address"
                  normalizeFontSize={true}
                  onBlur={[Function]}
                  onChangeText={[Function]}
                  placeholder="E-postadress"
                  value={null}
                />,
                <FormLabel>
                  Autologin
                </FormLabel>,
                <Switch
                  disabled={false}
                  onValueChange={[Function]}
                  style={
                    Object {
                      "marginBottom": 10,
                      "marginLeft": 15,
                      "marginTop": 5,
                    }
                  }
                  value={false}
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <Avatar
                    activeOpacity={0.7}
                    editButton={
                      Object {
                        "iconColor": "#fff",
                        "iconName": "mode-edit",
                        "iconType": "material",
                        "size": null,
                        "style": null,
                        "underlayColor": "#000",
                      }
                    }
                    large={true}
                    onEditPress={null}
                    rounded={true}
                    showEditButton={false}
                    source={
                      Object {
                        "uri": "",
                      }
                    }
                  />,
                  "style": Array [
                    Object {
                      "alignItems": "flex-start",
                      "flexDirection": "row",
                      "justifyContent": "center",
                    },
                    Object {
                      "padding": 10,
                    },
                  ],
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "activeOpacity": 0.7,
                    "editButton": Object {
                      "iconColor": "#fff",
                      "iconName": "mode-edit",
                      "iconType": "material",
                      "size": null,
                      "style": null,
                      "underlayColor": "#000",
                    },
                    "large": true,
                    "onEditPress": null,
                    "rounded": true,
                    "showEditButton": false,
                    "source": Object {
                      "uri": "",
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": "Namn",
                },
                "ref": null,
                "rendered": "Namn",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "autoCapitalize": "words",
                  "normalizeFontSize": true,
                  "onBlur": [Function],
                  "onChangeText": [Function],
                  "placeholder": "Namn",
                  "value": "test",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": "Användarnamn",
                },
                "ref": null,
                "rendered": "Användarnamn",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "autoCapitalize": "none",
                  "normalizeFontSize": true,
                  "onBlur": [Function],
                  "onChangeText": [Function],
                  "placeholder": "Användarnamn",
                  "value": null,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": "Lösenord",
                },
                "ref": null,
                "rendered": "Lösenord",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "autoCapitalize": "none",
                  "normalizeFontSize": true,
                  "onBlur": [Function],
                  "onChangeText": [Function],
                  "placeholder": "Lösenord",
                  "secureTextEntry": true,
                  "value": null,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": "E-postadress",
                },
                "ref": null,
                "rendered": "E-postadress",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "autoCapitalize": "none",
                  "keyboardType": "email-address",
                  "normalizeFontSize": true,
                  "onBlur": [Function],
                  "onChangeText": [Function],
                  "placeholder": "E-postadress",
                  "value": null,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": "Autologin",
                },
                "ref": null,
                "rendered": "Autologin",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "disabled": false,
                  "onValueChange": [Function],
                  "style": Object {
                    "marginBottom": 10,
                    "marginLeft": 15,
                    "marginTop": 5,
                  },
                  "value": false,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "icon": Object {
                "name": "sign-out",
                "type": "font-awesome",
              },
              "medium": true,
              "onPress": undefined,
              "style": Object {
                "margin": 10,
              },
              "title": "Sign out",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [MockFunction],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <ScrollView
          testID="scrollView"
        >
          <View
            style={
              Array [
                Object {
                  "flex": 1,
                },
                Object {
                  "padding": 10,
                },
              ]
            }
          >
            <View>
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "flex-start",
                      "flexDirection": "row",
                      "justifyContent": "center",
                    },
                    Object {
                      "padding": 10,
                    },
                  ]
                }
              >
                <Avatar
                  activeOpacity={0.7}
                  editButton={
                    Object {
                      "iconColor": "#fff",
                      "iconName": "mode-edit",
                      "iconType": "material",
                      "size": null,
                      "style": null,
                      "underlayColor": "#000",
                    }
                  }
                  large={true}
                  onEditPress={null}
                  rounded={true}
                  showEditButton={false}
                  source={
                    Object {
                      "uri": "",
                    }
                  }
                />
              </View>
              <FormLabel>
                Namn
              </FormLabel>
              <FormInput
                autoCapitalize="words"
                normalizeFontSize={true}
                onBlur={[Function]}
                onChangeText={[Function]}
                placeholder="Namn"
                value="test"
              />
              <FormLabel>
                Användarnamn
              </FormLabel>
              <FormInput
                autoCapitalize="none"
                normalizeFontSize={true}
                onBlur={[Function]}
                onChangeText={[Function]}
                placeholder="Användarnamn"
                value={null}
              />
              <FormLabel>
                Lösenord
              </FormLabel>
              <FormInput
                autoCapitalize="none"
                normalizeFontSize={true}
                onBlur={[Function]}
                onChangeText={[Function]}
                placeholder="Lösenord"
                secureTextEntry={true}
                value={null}
              />
              <FormLabel>
                E-postadress
              </FormLabel>
              <FormInput
                autoCapitalize="none"
                keyboardType="email-address"
                normalizeFontSize={true}
                onBlur={[Function]}
                onChangeText={[Function]}
                placeholder="E-postadress"
                value={null}
              />
              <FormLabel>
                Autologin
              </FormLabel>
              <Switch
                disabled={false}
                onValueChange={[Function]}
                style={
                  Object {
                    "marginBottom": 10,
                    "marginLeft": 15,
                    "marginTop": 5,
                  }
                }
                value={false}
              />
            </View>
            <Button
              icon={
                Object {
                  "name": "sign-out",
                  "type": "font-awesome",
                }
              }
              medium={true}
              onPress={undefined}
              style={
                Object {
                  "margin": 10,
                }
              }
              title="Sign out"
            />
          </View>
        </ScrollView>,
        "style": Array [
          Object {
            "flex": 1,
          },
          Object {
            "padding": 10,
          },
        ],
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <View
            style={
              Array [
                Object {
                  "flex": 1,
                },
                Object {
                  "padding": 10,
                },
              ]
            }
          >
            <View>
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "flex-start",
                      "flexDirection": "row",
                      "justifyContent": "center",
                    },
                    Object {
                      "padding": 10,
                    },
                  ]
                }
              >
                <Avatar
                  activeOpacity={0.7}
                  editButton={
                    Object {
                      "iconColor": "#fff",
                      "iconName": "mode-edit",
                      "iconType": "material",
                      "size": null,
                      "style": null,
                      "underlayColor": "#000",
                    }
                  }
                  large={true}
                  onEditPress={null}
                  rounded={true}
                  showEditButton={false}
                  source={
                    Object {
                      "uri": "",
                    }
                  }
                />
              </View>
              <FormLabel>
                Namn
              </FormLabel>
              <FormInput
                autoCapitalize="words"
                normalizeFontSize={true}
                onBlur={[Function]}
                onChangeText={[Function]}
                placeholder="Namn"
                value="test"
              />
              <FormLabel>
                Användarnamn
              </FormLabel>
              <FormInput
                autoCapitalize="none"
                normalizeFontSize={true}
                onBlur={[Function]}
                onChangeText={[Function]}
                placeholder="Användarnamn"
                value={null}
              />
              <FormLabel>
                Lösenord
              </FormLabel>
              <FormInput
                autoCapitalize="none"
                normalizeFontSize={true}
                onBlur={[Function]}
                onChangeText={[Function]}
                placeholder="Lösenord"
                secureTextEntry={true}
                value={null}
              />
              <FormLabel>
                E-postadress
              </FormLabel>
              <FormInput
                autoCapitalize="none"
                keyboardType="email-address"
                normalizeFontSize={true}
                onBlur={[Function]}
                onChangeText={[Function]}
                placeholder="E-postadress"
                value={null}
              />
              <FormLabel>
                Autologin
              </FormLabel>
              <Switch
                disabled={false}
                onValueChange={[Function]}
                style={
                  Object {
                    "marginBottom": 10,
                    "marginLeft": 15,
                    "marginTop": 5,
                  }
                }
                value={false}
              />
            </View>
            <Button
              icon={
                Object {
                  "name": "sign-out",
                  "type": "font-awesome",
                }
              }
              medium={true}
              onPress={undefined}
              style={
                Object {
                  "margin": 10,
                }
              }
              title="Sign out"
            />
          </View>,
          "testID": "scrollView",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <View>
                <View
                  style={
                    Array [
                      Object {
                        "alignItems": "flex-start",
                        "flexDirection": "row",
                        "justifyContent": "center",
                      },
                      Object {
                        "padding": 10,
                      },
                    ]
                  }
                >
                  <Avatar
                    activeOpacity={0.7}
                    editButton={
                      Object {
                        "iconColor": "#fff",
                        "iconName": "mode-edit",
                        "iconType": "material",
                        "size": null,
                        "style": null,
                        "underlayColor": "#000",
                      }
                    }
                    large={true}
                    onEditPress={null}
                    rounded={true}
                    showEditButton={false}
                    source={
                      Object {
                        "uri": "",
                      }
                    }
                  />
                </View>
                <FormLabel>
                  Namn
                </FormLabel>
                <FormInput
                  autoCapitalize="words"
                  normalizeFontSize={true}
                  onBlur={[Function]}
                  onChangeText={[Function]}
                  placeholder="Namn"
                  value="test"
                />
                <FormLabel>
                  Användarnamn
                </FormLabel>
                <FormInput
                  autoCapitalize="none"
                  normalizeFontSize={true}
                  onBlur={[Function]}
                  onChangeText={[Function]}
                  placeholder="Användarnamn"
                  value={null}
                />
                <FormLabel>
                  Lösenord
                </FormLabel>
                <FormInput
                  autoCapitalize="none"
                  normalizeFontSize={true}
                  onBlur={[Function]}
                  onChangeText={[Function]}
                  placeholder="Lösenord"
                  secureTextEntry={true}
                  value={null}
                />
                <FormLabel>
                  E-postadress
                </FormLabel>
                <FormInput
                  autoCapitalize="none"
                  keyboardType="email-address"
                  normalizeFontSize={true}
                  onBlur={[Function]}
                  onChangeText={[Function]}
                  placeholder="E-postadress"
                  value={null}
                />
                <FormLabel>
                  Autologin
                </FormLabel>
                <Switch
                  disabled={false}
                  onValueChange={[Function]}
                  style={
                    Object {
                      "marginBottom": 10,
                      "marginLeft": 15,
                      "marginTop": 5,
                    }
                  }
                  value={false}
                />
              </View>,
              <Button
                icon={
                  Object {
                    "name": "sign-out",
                    "type": "font-awesome",
                  }
                }
                medium={true}
                onPress={undefined}
                style={
                  Object {
                    "margin": 10,
                  }
                }
                title="Sign out"
              />,
            ],
            "style": Array [
              Object {
                "flex": 1,
              },
              Object {
                "padding": 10,
              },
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "flex-start",
                          "flexDirection": "row",
                          "justifyContent": "center",
                        },
                        Object {
                          "padding": 10,
                        },
                      ]
                    }
                  >
                    <Avatar
                      activeOpacity={0.7}
                      editButton={
                        Object {
                          "iconColor": "#fff",
                          "iconName": "mode-edit",
                          "iconType": "material",
                          "size": null,
                          "style": null,
                          "underlayColor": "#000",
                        }
                      }
                      large={true}
                      onEditPress={null}
                      rounded={true}
                      showEditButton={false}
                      source={
                        Object {
                          "uri": "",
                        }
                      }
                    />
                  </View>,
                  <FormLabel>
                    Namn
                  </FormLabel>,
                  <FormInput
                    autoCapitalize="words"
                    normalizeFontSize={true}
                    onBlur={[Function]}
                    onChangeText={[Function]}
                    placeholder="Namn"
                    value="test"
                  />,
                  <FormLabel>
                    Användarnamn
                  </FormLabel>,
                  <FormInput
                    autoCapitalize="none"
                    normalizeFontSize={true}
                    onBlur={[Function]}
                    onChangeText={[Function]}
                    placeholder="Användarnamn"
                    value={null}
                  />,
                  <FormLabel>
                    Lösenord
                  </FormLabel>,
                  <FormInput
                    autoCapitalize="none"
                    normalizeFontSize={true}
                    onBlur={[Function]}
                    onChangeText={[Function]}
                    placeholder="Lösenord"
                    secureTextEntry={true}
                    value={null}
                  />,
                  <FormLabel>
                    E-postadress
                  </FormLabel>,
                  <FormInput
                    autoCapitalize="none"
                    keyboardType="email-address"
                    normalizeFontSize={true}
                    onBlur={[Function]}
                    onChangeText={[Function]}
                    placeholder="E-postadress"
                    value={null}
                  />,
                  <FormLabel>
                    Autologin
                  </FormLabel>,
                  <Switch
                    disabled={false}
                    onValueChange={[Function]}
                    style={
                      Object {
                        "marginBottom": 10,
                        "marginLeft": 15,
                        "marginTop": 5,
                      }
                    }
                    value={false}
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <Avatar
                      activeOpacity={0.7}
                      editButton={
                        Object {
                          "iconColor": "#fff",
                          "iconName": "mode-edit",
                          "iconType": "material",
                          "size": null,
                          "style": null,
                          "underlayColor": "#000",
                        }
                      }
                      large={true}
                      onEditPress={null}
                      rounded={true}
                      showEditButton={false}
                      source={
                        Object {
                          "uri": "",
                        }
                      }
                    />,
                    "style": Array [
                      Object {
                        "alignItems": "flex-start",
                        "flexDirection": "row",
                        "justifyContent": "center",
                      },
                      Object {
                        "padding": 10,
                      },
                    ],
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "activeOpacity": 0.7,
                      "editButton": Object {
                        "iconColor": "#fff",
                        "iconName": "mode-edit",
                        "iconType": "material",
                        "size": null,
                        "style": null,
                        "underlayColor": "#000",
                      },
                      "large": true,
                      "onEditPress": null,
                      "rounded": true,
                      "showEditButton": false,
                      "source": Object {
                        "uri": "",
                      },
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": "Namn",
                  },
                  "ref": null,
                  "rendered": "Namn",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "autoCapitalize": "words",
                    "normalizeFontSize": true,
                    "onBlur": [Function],
                    "onChangeText": [Function],
                    "placeholder": "Namn",
                    "value": "test",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": "Användarnamn",
                  },
                  "ref": null,
                  "rendered": "Användarnamn",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "autoCapitalize": "none",
                    "normalizeFontSize": true,
                    "onBlur": [Function],
                    "onChangeText": [Function],
                    "placeholder": "Användarnamn",
                    "value": null,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": "Lösenord",
                  },
                  "ref": null,
                  "rendered": "Lösenord",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "autoCapitalize": "none",
                    "normalizeFontSize": true,
                    "onBlur": [Function],
                    "onChangeText": [Function],
                    "placeholder": "Lösenord",
                    "secureTextEntry": true,
                    "value": null,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": "E-postadress",
                  },
                  "ref": null,
                  "rendered": "E-postadress",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "autoCapitalize": "none",
                    "keyboardType": "email-address",
                    "normalizeFontSize": true,
                    "onBlur": [Function],
                    "onChangeText": [Function],
                    "placeholder": "E-postadress",
                    "value": null,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": "Autologin",
                  },
                  "ref": null,
                  "rendered": "Autologin",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "disabled": false,
                    "onValueChange": [Function],
                    "style": Object {
                      "marginBottom": 10,
                      "marginLeft": 15,
                      "marginTop": 5,
                    },
                    "value": false,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "icon": Object {
                  "name": "sign-out",
                  "type": "font-awesome",
                },
                "medium": true,
                "onPress": undefined,
                "style": Object {
                  "margin": 10,
                },
                "title": "Sign out",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [MockFunction],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
