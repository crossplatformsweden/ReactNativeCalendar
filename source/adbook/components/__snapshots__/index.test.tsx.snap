// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components Main should render self and subcomponents 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ComponentBase
    login={
      Object {
        "isLoggedIn": false,
        "user": null,
      }
    }
    utility={
      Object {
        "busyReason": "",
        "isBusy": false,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <AdBookBase
          login={
            Object {
              "isLoggedIn": false,
              "user": null,
            }
          }
          utility={
            Object {
              "busyReason": "",
              "isBusy": false,
            }
          }
        />,
        null,
        <busyIndicator
          isBusy={false}
          message=""
          testID="busyIndicator"
        />,
      ],
      "style": Object {
        "flex": 1,
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "login": Object {
            "isLoggedIn": false,
            "user": null,
          },
          "utility": Object {
            "busyReason": "",
            "isBusy": false,
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      null,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "isBusy": false,
          "message": "",
          "testID": "busyIndicator",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <AdBookBase
            login={
              Object {
                "isLoggedIn": false,
                "user": null,
              }
            }
            utility={
              Object {
                "busyReason": "",
                "isBusy": false,
              }
            }
          />,
          null,
          <busyIndicator
            isBusy={false}
            message=""
            testID="busyIndicator"
          />,
        ],
        "style": Object {
          "flex": 1,
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "login": Object {
              "isLoggedIn": false,
              "user": null,
            },
            "utility": Object {
              "busyReason": "",
              "isBusy": false,
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        null,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "isBusy": false,
            "message": "",
            "testID": "busyIndicator",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
